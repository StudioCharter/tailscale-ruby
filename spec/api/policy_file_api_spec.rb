=begin
#Tailscale API

#### Overview  **The API endpoints documented here are stable. However, the OpenAPI spec used to generate this documentation is unstable. It may change or break without notice.**  The Tailscale API is a (mostly) RESTful API. Typically, both POST bodies and responses are JSON-encoded.  ### Base URL  The base URL for the Tailscale API is https://api.tailscale.com/api/v2/.  Examples in this document may abbreviate this to `/api/v2/`.  ### Authentication  Requests to the Tailscale API are authenticated with an API access token (sometimes called an API key). Access tokens can be supplied as the username portion of HTTP Basic authentication (leave the password blank) or as an OAuth Bearer token:  ``` // passing token with basic auth curl -u \"tskey-api-xxxxx:\" https://api.tailscale.com/api/v2/...  // passing token as bearer token curl -H \"Authorization: Bearer tskey-api-xxxxx\" https://api.tailscale.com/api/v2/... ```  Access tokens for individual users can be created and managed from the [Keys](https://login.tailscale.com/admin/settings/keys) page of the admin console. These tokens will have the same permissions as the owning user, and can be set to expire in 1 to 90 days. Access tokens are identifiable by the prefix tskey-api-.  Alternatively, an OAuth client can be used to create short-lived access tokens with scoped permission. OAuth clients don't expire, and can therefore be used to provide ongoing access to the API, creating access tokens as needed. OAuth clients and the access tokens they create are not tied to an individual Tailscale user. OAuth client secrets are identifiable by the prefix tskey-client-. Learn more about [OAuth clients].  [ OAuth clients ]: https://tailscale.com/kb/1215/  ### Errors  The Tailscale API returns status codes consistent with standard HTTP conventions. In addition to the status code, errors may include additional information in the response body:  ``` {   \"message\": \"additional error information\" } ```  ### Pagination  The Tailscale API does not currently support pagination. All results are returned at once.

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PolicyFileApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PolicyFileApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PolicyFileApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyFileApi' do
    it 'should create an instance of PolicyFileApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PolicyFileApi)
    end
  end

  # unit tests for get_policy_file
  # Get policy file
  # Retrieves the current policy file for the given tailnet;  this includes the ACL along with the rules and tests that have been defined.  This method can return the policy file as JSON or HuJSON, depending on the Accept header. The response also includes an &#x60;ETag&#x60; header, which can be optionally included when [setting the policy file](#tag/policyfile/post/tailnet/{tailnet}/acl) to avoid missed updates.  Learn more about [policy file ACL syntax](https://tailscale.com/kb/1337/acl-syntax).  OAuth Scope: &#x60;policy_file:read&#x60;. 
  # @param tailnet The tailnet organization name.  When specifying a tailnet in the API, you can:  - Provide a dash (&#x60;-&#x60;) to reference the default tailnet of the access token being used to make the API call.   This is the best option for most users.   Your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/-/...\&quot;   &#x60;&#x60;&#x60;  - Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**   page of the Tailscale admin console (not to be confused with the \&quot;tailnet name\&quot; found in the DNS tab).    For example, if your organization name is &#x60;alice@example.com&#x60;, your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...\&quot;   &#x60;&#x60;&#x60;    Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name). 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :details Request a detailed description of the tailnet policy file by providing &#x60;details&#x3D;true&#x60; in the URL query string. Supplying any other value for &#x60;details&#x60;, or not sending the param, is treated as sending &#x60;details&#x3D;false&#x60;. If using this, do not supply an &#x60;Accept&#x60; parameter in the header.  The response will contain a JSON object with the fields: - &#x60;acl&#x60;: a base64-encoded string representation of the huJSON format. - &#x60;warnings&#x60;: array of strings for syntactically valid but nonsensical entries. - &#x60;errors&#x60;: an array of strings for parsing failures. 
  # @option opts [String] :accept Response is encoded as JSON if &#x60;application/json&#x60; is requested, otherwise HuJSON will be returned.
  # @return [Object]
  describe 'get_policy_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for preview_rule_matches
  # Preview rule matches
  # When given a user or IP port to match against, returns the tailnet policy rules that apply to that resource, without saving the policy file to the server. 
  # @param tailnet The tailnet organization name.  When specifying a tailnet in the API, you can:  - Provide a dash (&#x60;-&#x60;) to reference the default tailnet of the access token being used to make the API call.   This is the best option for most users.   Your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/-/...\&quot;   &#x60;&#x60;&#x60;  - Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**   page of the Tailscale admin console (not to be confused with the \&quot;tailnet name\&quot; found in the DNS tab).    For example, if your organization name is &#x60;alice@example.com&#x60;, your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...\&quot;   &#x60;&#x60;&#x60;    Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name). 
  # @param type Specify for which type of resource (user or IP port) matching rules are to be fetched. Read about [previewing changes in the admin console](https://tailscale.com/kb/1018/#previewing-changes).  OAuth Scope: &#x60;policy_file:read&#x60;. 
  # @param preview_for - If &#x60;type&#x60; is &#x60;user&#x60;, provide the email of a valid user with registered machines. - If &#x60;type&#x60; is &#x60;ipport&#x60;, provide an IP address + port: &#x60;10.0.0.1:80&#x60;.  The supplied policy file is queried with this parameter to determine which rules match. 
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @return [PreviewRuleMatches200Response]
  describe 'preview_rule_matches test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_policy_file
  # Set policy file
  # Sets the ACL for the given tailnet. HuJSON and JSON are both accepted inputs. An &#x60;If-Match&#x60; header can be set to avoid missed updates.  On success, returns the updated ACL in JSON or HuJSON according to the &#x60;Accept&#x60; header. Otherwise, errors are returned for incorrectly defined ACLs, ACLs with failing tests on attempted updates, and mismatched &#x60;If-Match&#x60; header and &#x60;ETag&#x60;.  Learn more about [policy file ACL syntax](https://tailscale.com/kb/1337/acl-syntax).  OAuth Scope: &#x60;policy_file&#x60;. 
  # @param tailnet The tailnet organization name.  When specifying a tailnet in the API, you can:  - Provide a dash (&#x60;-&#x60;) to reference the default tailnet of the access token being used to make the API call.   This is the best option for most users.   Your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/-/...\&quot;   &#x60;&#x60;&#x60;  - Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**   page of the Tailscale admin console (not to be confused with the \&quot;tailnet name\&quot; found in the DNS tab).    For example, if your organization name is &#x60;alice@example.com&#x60;, your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...\&quot;   &#x60;&#x60;&#x60;    Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name). 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :if_match This is a safety mechanism to avoid overwriting other users&#39; updates to the tailnet policy file.  - Set the &#x60;If-Match&#x60; value to that of the &#x60;ETag&#x60; header returned in a &#x60;GET&#x60; request to &#x60;/api/v2/tailnet/{tailnet}/acl&#x60;.   Tailscale compares the &#x60;ETag&#x60; value in your request to that of the current tailnet file and only replaces the file if there&#39;s a match.   (A mismatch indicates that another update has been made to the file.) For example: &#x60;-H \&quot;If-Match: \\\&quot;e0b2816b418\\\&quot;\&quot;&#x60;. - Alternately, set the &#x60;If-Match&#x60; value to &#x60;ts-default&#x60; to ensure that the policy file is replaced *only if the current policy file is still the untouched default created automatically* for each tailnet.   For example: &#x60;-H \&quot;If-Match: \\\&quot;ts-default\\\&quot;\&quot;&#x60;. 
  # @option opts [String] :accept Response is encoded as JSON if &#x60;application/json&#x60; is requested, otherwise HuJSON will be returned.
  # @option opts [Object] :body 
  # @return [Object]
  describe 'set_policy_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for validate_and_test_policy_file
  # Validate and test policy file
  # This endpoint works in one of two modes, neither of which modifies your current tailnet policy file:  - Run ACL tests: When the request body contains ACL tests as a JSON array,   Tailscale runs ACL tests against the tailnet&#39;s current policy file.   Learn more about [ACL tests](https://tailscale.com/kb/1337/acl-syntax#tests). - Validate a new policy file: When the request body is a JSON object,   Tailscale interprets the body as a hypothetical new tailnet policy file with new ACLs,   including any new rules and tests.   It validates that the policy file is parsable and runs tests to validate the existing rules.  In either case, this method does not modify the tailnet policy file in any way.  OAuth Scope: &#x60;policy_file:read&#x60;. 
  # @param tailnet The tailnet organization name.  When specifying a tailnet in the API, you can:  - Provide a dash (&#x60;-&#x60;) to reference the default tailnet of the access token being used to make the API call.   This is the best option for most users.   Your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/-/...\&quot;   &#x60;&#x60;&#x60;  - Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**   page of the Tailscale admin console (not to be confused with the \&quot;tailnet name\&quot; found in the DNS tab).    For example, if your organization name is &#x60;alice@example.com&#x60;, your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...\&quot;   &#x60;&#x60;&#x60;    Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name). 
  # @param [Hash] opts the optional parameters
  # @option opts [ValidateAndTestPolicyFileRequest] :validate_and_test_policy_file_request 
  # @return [ValidateAndTestPolicyFile200Response]
  describe 'validate_and_test_policy_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
