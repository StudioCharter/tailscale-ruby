=begin
#Tailscale API

#### Overview  **The API endpoints documented here are stable. However, the OpenAPI spec used to generate this documentation is unstable. It may change or break without notice.**  The Tailscale API is a (mostly) RESTful API. Typically, both POST bodies and responses are JSON-encoded.  ### Base URL  The base URL for the Tailscale API is https://api.tailscale.com/api/v2/.  Examples in this document may abbreviate this to `/api/v2/`.  ### Authentication  Requests to the Tailscale API are authenticated with an API access token (sometimes called an API key). Access tokens can be supplied as the username portion of HTTP Basic authentication (leave the password blank) or as an OAuth Bearer token:  ``` // passing token with basic auth curl -u \"tskey-api-xxxxx:\" https://api.tailscale.com/api/v2/...  // passing token as bearer token curl -H \"Authorization: Bearer tskey-api-xxxxx\" https://api.tailscale.com/api/v2/... ```  Access tokens for individual users can be created and managed from the [Keys](https://login.tailscale.com/admin/settings/keys) page of the admin console. These tokens will have the same permissions as the owning user, and can be set to expire in 1 to 90 days. Access tokens are identifiable by the prefix tskey-api-.  Alternatively, an OAuth client can be used to create short-lived access tokens with scoped permission. OAuth clients don't expire, and can therefore be used to provide ongoing access to the API, creating access tokens as needed. OAuth clients and the access tokens they create are not tied to an individual Tailscale user. OAuth client secrets are identifiable by the prefix tskey-client-. Learn more about [OAuth clients].  [ OAuth clients ]: https://tailscale.com/kb/1215/  ### Errors  The Tailscale API returns status codes consistent with standard HTTP conventions. In addition to the status code, errors may include additional information in the response body:  ``` {   \"message\": \"additional error information\" } ```  ### Pagination  The Tailscale API does not currently support pagination. All results are returned at once.

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::UsersApi)
    end
  end

  # unit tests for approve_user
  # Approve a user
  # Approve a pending user&#39;s access to the tailnet. This is a no-op if user approval has not been enabled for the tailnet, or if the user is already approved.  User approval can be managed using the [tailnet settings endpoints](#tag/tailnetsettings).  Learn more about [user approval](/kb/1239/user-approval) and [enabling user approval for your network](/kb/1239/user-approval#enable-user-approval-for-your-network).  OAuth Scope: &#x60;users&#x60;.  &gt; ⓘ User-based access tokens cannot approve their own user. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'approve_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user
  # Delete a user
  # &gt; ⓘ This endpoint is available for the [Personal and Enterprise plans](/pricing).  Delete a user from their tailnet. Learn more about [deleting users](/kb/1145/remove-team-members#deleting-users).  OAuth Scope: &#x60;users&#x60;.  &gt; ⓘ User-based access tokens cannot delete their own user. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Get a user
  # Retrieve details about the specified user.  OAuth Scope: &#x60;users:read&#x60;. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_users
  # List users
  # List all users of a tailnet.  OAuth Scope: &#x60;users:read&#x60;. 
  # @param tailnet The tailnet organization name.  When specifying a tailnet in the API, you can:  - Provide a dash (&#x60;-&#x60;) to reference the default tailnet of the access token being used to make the API call.   This is the best option for most users.   Your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/-/...\&quot;   &#x60;&#x60;&#x60;  - Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**   page of the Tailscale admin console (not to be confused with the \&quot;tailnet name\&quot; found in the DNS tab).    For example, if your organization name is &#x60;alice@example.com&#x60;, your API calls would start:    &#x60;&#x60;&#x60;sh   curl \&quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...\&quot;   &#x60;&#x60;&#x60;    Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name). 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Allows for filtering the output by user type. 
  # @option opts [String] :role Allows for filtering the output by user role. Learn more about [user roles](kb/1138/user-roles). 
  # @return [ListUsers200Response]
  describe 'list_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for restore_user
  # Restore a user
  # &gt; ⓘ This endpoint is available for the [Personal and Enterprise plans](/pricing).  Restores a suspended user&#39;s access to their tailnet. Learn more about [restoring users](/kb/1145/remove-team-members#restoring-users).  OAuth Scope: &#x60;users&#x60;.  &gt; ⓘ User-based access tokens cannot restore their own user. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'restore_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suspend_user
  # Suspend a user
  # &gt; ⓘ This endpoint is available for the [Personal and Enterprise plans](/pricing).  Suspends a user from their tailnet. Learn more about [suspending users](/kb/1145/remove-team-members#suspending-users).  OAuth Scope: &#x60;users&#x60;.  &gt; ⓘ User-based access tokens cannot suspend their own user. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'suspend_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user_role
  # Update user role
  # Update the role for the specified user.  Learn more about [user roles](kb/1138/user-roles).  OAuth Scope: &#x60;users&#x60;.  &gt; ⓘ User-based access tokens cannot update their own user&#39;s role. 
  # @param user_id ID of the user. 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUserRoleRequest] :update_user_role_request 
  # @return [nil]
  describe 'update_user_role test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
